{"version":3,"sources":["components/navbar.js","components/Footer.js","components/Buy.js","getWeb3.js","ipfs.js","components/Register.js","components/About.js","components/Home.js","components/Faq.js","serviceWorker.js","index.js","App.js","components/img-1.jpg","components/img-2.jpg","components/img-3.jpg","components/about-img.png","components/image-1.jpg.jpg"],"names":["NavBar","props","loggedIn","Navbar","bg","variant","Container","Brand","href","Nav","className","to","Footer","Buy","fluid","Row","Col","Card","Img","src","img1","Body","Title","Text","Button","size","img2","img3","getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","pinata","require","pinataSDK","pinJsonToIPFS","jsonMetadata","options","pinataMetadata","name","keyvalues","address","properties","pinataOptions","cidVersion","pinJSONToIPFS","result","Register","Swal","useState","setName","age","setAge","email","setEmail","password","setPassword","setWeb3","accounts","setAccounts","contract","setContract","fetchContract","eth","getAccounts","net","getId","networkId","deployedNetwork","UserMgmt","networks","instance","Contract","abi","alert","error","useEffect","registerSubmitHandler","event","preventDefault","methods","_newUser","send","from","registration","fire","icon","title","text","md","style","textAlign","Form","onSubmit","Group","controlId","Label","Control","placeholder","label","value","onChange","target","type","position","top","About","img_1","width","Home","display","justifyContent","image","Faq","id","class","Boolean","location","hostname","match","ReactDOM","render","path","exact","document","getElementById","navigator","serviceWorker","ready","then","unregister","module","exports"],"mappings":"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","file":"static/js/main.b31d76cb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Navbar, Nav, Container} from 'react-bootstrap';\r\nimport {Routes,Route,Link} from 'react-router-dom';\r\n\r\n\r\nconst NavBar = (props) =>{\r\n\r\n    return (\r\n        <div>\r\n            {props.loggedIn?\r\n            (<Navbar bg=\"dark\" variant=\"dark\">\r\n            <Container>\r\n            <Navbar.Brand href=\"#home\">D-Leaf</Navbar.Brand>\r\n            <Nav className=\"ml-auto\">\r\n            <Link to=\"/profile\" className=\"nav-link\">Profle</Link>\r\n            </Nav>\r\n            </Container>\r\n            </Navbar> )\r\n            :(<Navbar bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n                <Navbar.Brand href=\"#home\">D-Leaf</Navbar.Brand>\r\n                <Nav className=\"ml-auto\">\r\n                <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n                <Link to=\"/about\" className=\"nav-link\">About Us</Link>\r\n                <Link to=\"/buy\" className=\"nav-link\">Buy</Link>\r\n                <Link to=\"/sell\" className=\"nav-link\">Sell</Link>\r\n                <Link to=\"/faq\" className=\"nav-link\">FAQ</Link>\r\n                \r\n                \r\n                </Nav>\r\n                </Container>\r\n            </Navbar>)}\r\n                \r\n            {/* <Routes>\r\n                <Route  exact path =\"/\" element={<Home />} />\r\n                <Route  exact path =\"/login\" element={<Login loginHandler={props.loginHandler}/>} />\r\n                <Route  exact path =\"/register\" element={<Register />} />\r\n                <Route  exact path =\"/profile\" element={<Profile/>} />\r\n                <Route  exact path =\"/about\" element={<About/>} />\r\n            </Routes> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React from 'react'\r\nimport './Footer.css'\r\nconst Footer = () => {\r\n    return (\r\n        <div className='btn--footer'>\r\n        <div className=\"footer-copyright text-center py-3\">© 2020 Copyright:\r\n        <a href=\"https://mdbootstrap.com/\"> D-Leaf-Coders.com</a>\r\n    </div>\r\n    </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react'\r\nimport {Row, Col,Card,Button,Container} from \"react-bootstrap\"\r\nimport img1 from \"./img-1.jpg\"\r\nimport img2 from \"./img-2.jpg\"\r\nimport img3 from \"./img-3.jpg\"\r\n\r\n\r\nimport './Buy.css'\r\nimport { Link } from \"react-router-dom\";\r\nconst Buy = () => {\r\n    return (\r\n        <div className=\"main\">\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n      <Container className=\"btn\" fluid>\r\n        <Row>\r\n          <Col>\r\n            <Card className=\"main-btn-grid\">\r\n              <Card.Img variant=\"top\" src={img1}/>\r\n              <Card.Body>\r\n                <Card.Title><b>BLINDING LIGHTS</b></Card.Title>\r\n                <Card.Text>\r\n                <h5>Date:20-December-2022</h5>\r\n                  <h5>Venue: Chennai</h5>\r\n                </Card.Text>\r\n                <Button variant=\"primary\" size=\"lg\">\r\n                      <Link to={\"/buyform\"} className=\"btn-btn-form\">\r\n                        PROCEED\r\n                      </Link>\r\n                    </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col>\r\n            <Card className=\"main-btn-grid\"  >\r\n              <Card.Img variant=\"top\" src={img2} />\r\n              <Card.Body>\r\n                <Card.Title><b>MOVIE BASH</b></Card.Title>\r\n                <Card.Text>\r\n                  <h5>Date: 05-September-2022</h5>\r\n                  <h5>Venue: Mumbai</h5>\r\n                </Card.Text>\r\n                <Button variant=\"primary\" size=\"lg\">\r\n                      <Link to={\"/buyform\"} className=\"btn-btn-form\">\r\n                        PROCEED\r\n                      </Link>\r\n                    </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col>\r\n            <Card className=\"main-btn-grid\">\r\n              <Card.Img variant=\"top\" src={img3} />\r\n              <Card.Body>\r\n                <Card.Title><b>HACK REX 3.0</b></Card.Title>\r\n                <Card.Text>\r\n                <h5>Date: 09-November-2022</h5>\r\n                  <h5>Venue: Jaipur</h5>\r\n                </Card.Text>\r\n                <Button variant=\"primary\" size=\"lg\">\r\n                      <Link to={\"/buyform\"} className=\"btn-btn-form\">\r\n                        PROCEED\r\n                      </Link>\r\n                    </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Buy;\r\n","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Accounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","\r\nconst pinataSDK = require(\"@pinata/sdk\");\r\n// const ipfsUris = [\"https://artion.mypinata.cloud/ipfs/\", \"https://artion11.mypinata.cloud/ipfs/\"];\r\n// const uploadPath = process.env.UPLOAD_PATH;\r\nconst pinata = pinataSDK(\r\n  \"3d52bc4f33dae9363366\",\r\n  \"57f5b07b64ca27412398939e75d40c1552d54889c04761d0c41c14b999a1aee0\"\r\n);\r\n\r\n// const pinFileToIPFS = async (\r\n//   fileName,\r\n//   address,\r\n//   name,\r\n//   symbol,\r\n//   royalty,\r\n//   xtraUrl\r\n// ) => {\r\n//   const options = {\r\n//     pinataMetadata: {\r\n//       name: name,\r\n//       keyvalues: {\r\n//         symbol: symbol,\r\n//         royalty: royalty,\r\n//         IP_Rights: xtraUrl,\r\n//         recipient: address,\r\n//       },\r\n//     },\r\n//     pinataOptions: {\r\n//       cidVersion: 0,\r\n//     },\r\n//   };\r\n//   const readableStreamForFile = fs.createReadStream(uploadPath + fileName);\r\n\r\n//   try {\r\n//     let result = await pinata.pinFileToIPFS(readableStreamForFile, options);\r\n//     return result;\r\n//   } catch (error) {\r\n//     Logger.error(error);\r\n//     return \"failed to pin file to ipfs\";\r\n//   }\r\n// };\r\n\r\n\r\n\r\n\r\nconst pinJsonToIPFS = async (jsonMetadata) => {\r\n  const options = {\r\n    pinataMetadata: {\r\n      name: jsonMetadata.name,\r\n      keyvalues: {\r\n        address: jsonMetadata.properties.address,\r\n      },\r\n    },\r\n    pinataOptions: {\r\n      cidVersion: 0,\r\n    },\r\n  };\r\n\r\n  try {\r\n    let result = await pinata.pinJSONToIPFS(jsonMetadata, options);\r\n    return result;\r\n  } catch (error) {\r\n    return \"failed to pin json to ipfs\";\r\n  }\r\n};\r\n\r\nexport default pinJsonToIPFS;\r\n","import {Form,Button} from 'react-bootstrap';\r\nimport React,{useState,useEffect} from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport {Row,Col} from 'react-bootstrap';\r\nimport UserMgmt from '../contracts/UserMgmt.json'\r\nimport './Register.css'\r\nimport getWeb3 from \"../getWeb3\";\r\nimport pinJsonToIPFS from '../ipfs';\r\n\r\nconst Register = () =>{\r\n    \r\n    const Swal = require('sweetalert2');\r\n\r\n\r\n    const[name,setName]=useState('')\r\n    const[age,setAge]=useState(0)\r\n    const[email,setEmail]=useState('')\r\n    const[password,setPassword]=useState('')\r\n    const [web3, setWeb3] = useState(null)\r\n    const [accounts, setAccounts] = useState(null)\r\n    const [contract, setContract] = useState(null)\r\n\r\n\r\n    const fetchContract=async()=>{\r\n        try {\r\n        // Get network provider and web3 instance.\r\n        const web3 = await getWeb3();\r\n\r\n        // Use web3 to get the user's accounts.\r\n        const accounts = await web3.eth.getAccounts();\r\n\r\n        // Get the contract instance.\r\n        const networkId = await web3.eth.net.getId();\r\n        const deployedNetwork = UserMgmt.networks[networkId];\r\n        const instance = new web3.eth.Contract(\r\n            UserMgmt.abi,\r\n            deployedNetwork && deployedNetwork.address,\r\n        );\r\n\r\n        // Set web3, accounts, and contract to the state, and then proceed with an\r\n        // example of interacting with the contract's methods.\r\n        setWeb3(web3)\r\n        setAccounts(accounts)\r\n        setContract(instance)\r\n        } catch (error) {\r\n        // Catch any errors for any of the above operations.\r\n        alert(\r\n            `Failed to load web3, accounts, or contract. Check console for details.`,\r\n        );\r\n        console.error(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchContract();\r\n        },[fetchContract])\r\n\r\n        // const setNewUser=async()=>{\r\n        // await contract.methods._newUser()).send({ from: accounts[0] });\r\n        // const response = await contract.methods.get().call();\r\n        // setStorageValue(response);\r\n        // };\r\n\r\n    const nameChangeHandler = event =>{\r\n        setName(event.target.value); \r\n    }\r\n    const ageChangeHandler = event =>{\r\n        setAge(event.target.value); \r\n    }\r\n    const emailChangeHandler = event =>{\r\n        setEmail(event.target.value); \r\n    }\r\n    const passwordChangeHandler = event =>{\r\n        setPassword(event.target.value); \r\n    }\r\n    const registerSubmitHandler = async(event) =>{\r\n        event.preventDefault();\r\n        const registration=await contract.methods._newUser(name,email,password,age).send({ from: accounts[0] });\r\n        pinJsonToIPFS({name,email,password,age})\r\n        //call _newuser function of smart contract and register new user;\r\n        if(registration){\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: 'Noice',\r\n                text: 'Registration Complete'\r\n              })\r\n        }\r\n        setName('');\r\n        setAge(0);\r\n        setEmail('');\r\n        setPassword('');\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='regis-btn-main'>\r\n            <div>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col md='3'>\r\n                    <h2 style={{textAlign: 'center' ,'padding-bottom': '2rem'}} className=\"main-btn-register\">Register</h2>\r\n                    {/* <h3>Login</h3> */}\r\n                    <Form onSubmit={registerSubmitHandler}>\r\n                        <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control  \r\n                                placeholder =\"Enter your Name\"  \r\n                                label =\"name\"\r\n                                name =\"name\"\r\n                                value={name}\r\n                                onChange={nameChangeHandler} />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"age\">\r\n                            <Form.Label>Age</Form.Label>\r\n                            <Form.Control  \r\n                                type=\"number\" \r\n                                placeholder =\"Enter your age\"  \r\n                                label =\"age\"\r\n                                value={age}\r\n                                onChange={ageChangeHandler}\r\n                                name =\"age\" />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control  \r\n                                placeholder =\"Enter your Email\"  \r\n                                label =\"Email\"\r\n                                value={email}\r\n                                onChange={emailChangeHandler}\r\n                                name =\"email\" />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control  \r\n                                placeholder =\"Enter Password\"  \r\n                                label =\"Password\"\r\n                                type = \"password\"  \r\n                                name =\"password\"\r\n                                value={password}\r\n                                onChange={passwordChangeHandler} />\r\n                        </Form.Group>\r\n                        <Button type=\"submit\" variant=\"primary\" > Register </Button>\r\n                        <p style = {{position: 'relative', top:20}} className=\"para-btn\">\r\n                                Already a user?\r\n                                <Link to = '/login'>Login</Link>\r\n                            </p>\r\n                    </Form>\r\n               </Col>\r\n            </Row>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;","import React from 'react'\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport img_1 from \"./about-img.png\";\r\nimport \"./About.css\";\r\nconst About = () => {\r\n    return (\r\n        <div className=\"btn--main\">\r\n        <Container fluid className=\"container-btn-main-bg\">\r\n          <Row>\r\n            <Col md={7} className=\"main--heading\">\r\n              <h1 className=\"About\">About Us</h1>\r\n              <p className=\"Body\">\r\n                We are a team of four members from SRM Institute of Science\r\n                and Technology, we all are creative people working in our\r\n                respective fields and trying to bring out the best possible\r\n                solutions for the world. In this project, we have created a\r\n                website that allows the resale of any event ticket by\r\n                converting them to NFTs which will ensure that the seller who\r\n                is in a dread emergency to sell the ticket as he is unable to\r\n                attend the event and also the buyers who were unable to buy\r\n                the tickets from the respective event website but want to\r\n                visit the event. We at DLeaf try to make this possible for all\r\n                users. There is also an option to host an event whose all the\r\n                tickets will be provided in the form of NFT.\r\n              </p>\r\n            </Col>\r\n\r\n            <Col md={5}>\r\n              <div className=\"btn123\">\r\n                <img src={img_1} width=\"500px\" />\r\n              </div>\r\n            </Col>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n          </Row>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n        </Container>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"./Home.css\";\r\nimport image from \"./image-1.jpg.jpg\";\r\nimport { Link,Routes,Route } from \"react-router-dom\";\r\nimport Register from './Register'\r\nimport Buy from './Buy'\r\nconst Home = () =>{\r\n    return (\r\n        <div>\r\n        <div className=\"hero-container\">\r\n        <Container fluid className=\"main-container\">\r\n          <Row>\r\n            <Col style={{ display: \"flex\", justifyContent: \"left\" }}>\r\n              <div className=\"main-heading\">\r\n                <h1>ADVENTURE AWAITS</h1>\r\n                <p>What are you waiting for?</p>\r\n                <div className=\"btn--button\">\r\n                  <div className=\"mb-2\">\r\n                    <Button variant=\"primary\" size=\"lg\">\r\n                      <Link to=\"buy\" className=\"btn-but-ticket\">\r\n                        BUY TICKET\r\n                      </Link>\r\n                    </Button>\r\n                    <Button variant=\"secondary\" size=\"lg\">\r\n                      <Link to=\"sell\" className=\"btn-but-ticket\">\r\n                        SELL TICKET\r\n                      </Link>\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"btn--image\">\r\n              <img src={image} className=\"home-image\"/>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n      {/* <Routes>\r\n               \r\n               \r\n                <Route  exact path =\"/sell\" element={<Register />} />\r\n                <Route  exact path =\"/buy\" element={<Buy/>} />\r\n                \r\n            </Routes> */}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\nimport \"./Faq.css\";\r\nimport { Container } from \"react-bootstrap\";\r\nconst Faq= () => {\r\n    return (\r\n        <div>\r\n            <div className=\"background-color\">\r\n      <Container className=\"main--btn\" fluid>\r\n      <div className=\"space\">\r\n          <div className=\"main--btn\">\r\n            <br></br>\r\n    \r\n            <h2 className='main-main-main'>FREQUENTLY ASKED QUESTIONS</h2>\r\n            <br></br>\r\n\r\n            <div className=\"my-second-container\">\r\n              <div className=\"accordion\">\r\n                <div className=\"accordion-item\" id=\"question1\">\r\n                  <a className=\"accordion-link\" href=\"#question1\">\r\n                  What is a blockchain?\r\n                    <i class=\"fas fa-plus\"></i>\r\n                    {/* <i class=\"fas fa-minus\"></i> */}\r\n                  </a>\r\n                  <div className=\"answer\">\r\n                    <p>\r\n                    A blockchain is a distributed, cryptographically-secure database structure that allows network participants to establish a trusted and immutable record of \r\n                    transactional data without the need for intermediaries. A blockchain can execute a variety of functions beyond transaction settlement, such as smart contracts.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"accordion-item\" id=\"question2\">\r\n                  <a className=\"accordion-link\" href=\"#question2\">\r\n                  What are Smart contracts?\r\n                    <i class=\"fas fa-plus\"></i>\r\n                    {/* <i class=\"fas fa-minus\"></i> */}\r\n                  </a>\r\n                  <div className=\"answer\">\r\n                    <p>\r\n                    Smart contracts are simply programs stored on a blockchain that run when predetermined conditions are met. They typically are used to automate the execution of \r\n                    an agreement so that all participants can be immediately certain of the outcome, without any intermediary’s involvement or time loss.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"accordion-item\" id=\"question3\">\r\n                  <a className=\"accordion-link\" href=\"#question3\">\r\n                  What are NFTs and how do they work?\r\n                    <i class=\"fas fa-plus\"></i>\r\n                    {/* <i class=\"fas fa-minus\"></i> */}\r\n                  </a>\r\n                  <div className=\"answer\">\r\n                    <p>\r\n                    NFTs is an acronym for Non-Fungible Tokens.\r\n                    Non-Fungible in the sense that they are unique and cannot be interchanged like fungible assets such as Bitcoin. \r\n                    NFTs are digital assets that are usually representations of real-world objects such as in-game items, videos, music, collectibles, virtual assets, and arts. \r\n                    These crypto-assets are largely part of the Ethereum network, however, there have been other versions of NTFs implemented on other blockchains.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"accordion-item\" id=\"question4\">\r\n                  <a className=\"accordion-link\" href=\"#question4\">\r\n                  What is Ethereum?\r\n                    <i class=\"fas fa-plus\"></i>\r\n                    {/* <i class=\"fas fa-minus\"></i> */}\r\n                  </a>\r\n                  <div className=\"answer\">\r\n                    <p>\r\n                    Ethereum is a decentralized, open source, and distributed computing platform that enables the creation of smart contracts and decentralized applications, also known \r\n                    as dapps.Ethereum brought the first practical solution for smart contracts to the blockchain space. \r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"accordion-item\" id=\"question5\">\r\n                  <a className=\"accordion-link\" href=\"#question5\">\r\n                  What are NFTs used for?\r\n                    <i class=\"fas fa-plus\"></i>\r\n                    {/*  <i class=\"fas fa-minus\"></i> */}\r\n                  </a>\r\n                  <div className=\"answer\">\r\n                    <p>\r\n                    NFTs can be used to indicate ownership of rare assets which represents real-world items like real estate and artwork.\r\n                    It’s important to note however that purchasing an NFT that includes the copyright of the original artwork does not mean its copyright is automatically transferred \r\n                    to you. While you can sell the NFT itself, you are prohibited from reproducing or selling its content.\r\n                    </p>\r\n                  </div>\r\n                </div><div className=\"accordion-item\" id=\"question4\">\r\n                <a className=\"accordion-link\" href=\"#question4\">\r\n                Why do we use polygon?\r\n                  <i class=\"fas fa-plus\"></i>\r\n                  {/* <i class=\"fas fa-minus\"></i> */}\r\n                </a>\r\n                <div className=\"answer\">\r\n                  <p>\r\n                  Polygon MATIC is a scalability platform that enables Ethereum-supported blockchains to communicate with one another. It is also used to create new Ethereum blockchains for businesses and institutions needing decentralized payment solutions. The network refers to itself as \"Ethereum's internet of blockchains\" because one of its primary missions is to support a multichain Ethereum ecosystem. With a large user base, Ethereum's networks are frequently clogged, making transactions expensive for everyone. With these issues on Ethereum and no viable alternative, Polygon has emerged as a hero. This India-based blockchain platform has addressed these issues by implementing an innovative, one-of-a-kind Layer-2 solution, enabling Polygon to use Ethereum for transaction verification at a fraction of the cost. \r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"accordion-item\" id=\"question5\">\r\n                <a className=\"accordion-link\" href=\"#question5\">\r\n                Why do we need to use IPFS?\r\n                  <i class=\"fas fa-plus\"></i>\r\n                  {/*  <i class=\"fas fa-minus\"></i> */}\r\n                </a>\r\n                <div className=\"answer\">\r\n                  <p>\r\n                  IPFS is a file sharing system that can be leveraged to more efficiently store and share large files. It relies on cryptographic hashes that can easily be stored on a blockchain. Nonetheless, IPFS does not permit users to share files with selected parties. This is necessary, if sensitive or personal data needs to be shared.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n             \r\n            \r\n            \r\n          <div className=\"accordion-item\" id=\"question5\">\r\n            <a className=\"accordion-link\" href=\"#question5\">\r\n            Can NFTs be copied?\r\n              <i class=\"fas fa-plus\"></i>\r\n              {/*  <i class=\"fas fa-minus\"></i> */}\r\n            </a>\r\n            <div className=\"answer\">\r\n              <p>\r\n              No, and Yes. While the technology “NFT” cannot be replicated because of security factors inherited from blockchain, the media can be copied easily.\r\nIt’s impossible to fake the creator’s wallet even though copying the contents of an NFT can be done.\r\nNFTs contain unique codes — stored on the blockchain in an immutable form — that makes it possible to trace them back to the creator. Read our detailed article here \r\non where NFTs are stored.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        \r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n      </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Faq\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState, useEffect } from \"react\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavBar from './components/navbar';\nimport Footer from './components/Footer.js'\nimport Buy from \"./components/Buy.js\";\nimport Register from \"./components/Register.js\";\nimport About from \"./components/About.js\";\nimport Home from \"./components/Home\";\nimport Faq from \"./components/Faq\";\nimport { Route, Switch } from \"react-router-dom\"\nexport default function App() {\n\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const loginHandler = () => {\n    setLoggedIn(!loggedIn);\n  }\n\n  return (\n<div>\n<NavBar/>\n<Switch>\n        <Route path=\"/\" exact>\n          <Home />\n        </Route>\n        <Route path=\"/buy\">\n          <Buy />\n        </Route>\n        <Route path=\"/sell\">\n          <Register />\n        </Route>\n\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/faq\">\n          <Faq />\n        </Route>\n        <Route path=\"/buyform\">\n        <Register/>\n        </Route>\n        <Route path=\"/home\">\n          <Home />\n        </Route>\n      </Switch>\n    <Footer/>\n    </div>\n  )\n}\n","module.exports = __webpack_public_path__ + \"static/media/img-1.809ce4f4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img-2.90f50ea8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img-3.93ab2971.jpg\";","module.exports = __webpack_public_path__ + \"static/media/about-img.35ba4ddd.png\";","module.exports = __webpack_public_path__ + \"static/media/image-1.jpg.dd263ba9.jpg\";"],"sourceRoot":""}